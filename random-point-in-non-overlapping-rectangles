class Solution {


    private int[][] rects;
    private Random random;
    private TreeMap<Integer, Integer> map;
    private int sum;

    public Solution(int[][] rects) {
        this.rects = rects;
        random = new Random();
        map = new TreeMap<>();
        sum = 0;

        for (int i = 0; i < rects.length; i++) {
            int[] rect = rects[i];
            sum += (rect[2] - rect[0] + 1) * (rect[3] - rect[1] + 1);
            map.put(sum, i);
        }
    }

    public int[] pick() {
        int randomPoint = random.nextInt(sum) + 1;
        int idx = map.ceilingKey(randomPoint);
        int[] rect = rects[map.get(idx)];
        return new int[]{
            rect[0] + random.nextInt(rect[2] - rect[0] + 1),
            rect[1] + random.nextInt(rect[3] - rect[1] + 1)
    };}
}

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(rects);
 * int[] param_1 = obj.pick();
 */
